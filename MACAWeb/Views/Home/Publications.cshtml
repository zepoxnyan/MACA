@model PagedList.IPagedList<MACAWeb.Models.Publication>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Publications";
}

<div class="main-content">
    <div class="row">
        <div class="col-md-8">
            <h2>@ViewBag.Title</h2>
        </div>
        <div class="col col-md-4 search-box">
            @using (Html.BeginForm("Publications", "Home", FormMethod.Get))
            {
                <div class="bg-light rounded rounded-pill shadow-sm pl-3">
                    <div class="input-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control border-0 bg-light" })
                        <div class="input-group-append">
                            <button id="button-search" type="submit" class="btn btn-link text-primary"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <hr />
    <div class="row index-row">

        <div class="col-md-12">
            <ul>
                @foreach (var publication in Model)
                {
                <li class="mb-3 secondary">
                    @{
                        string seperator = "";
                        <span>
                            @foreach (var aut in publication.PublicationAuthors)
                            {
                                string fullName = seperator + aut.Author.FirstName + " " + aut.Author.Surname;
                                @Html.DisplayFor(modelItem => fullName)
                                seperator = ", ";
                            }
                        </span>
                        <span>:</span>
                        <span style="font-style:italic;padding-left:10px;">@publication.Title</span><span>, </span><br />
                        <span>Submitted in @publication.Year</span><br />
                        if (publication.DOI != null)
                        {
                            <span>
                                <a href=https://doi.org/@publication.DOI target="new">DOI: @publication.DOI</a>
                            </span>
                            <span style="color: #808080;"> | </span>


                        }
                        if (publication.Link != null)
                        {
                            if (publication.Link.Contains("http"))
                            {
                                <span>
                                    <a href=https://@publication.Link target="new">Official print</a>
                                </span>
                            }
                            else
                            {
                                <span>
                                    <a href=https://@publication.Link target="new">Official print</a>
                                </span>
                            }
                        }
                        if (publication.PreprintLink != null)
                        {
                            <span style="color: #808080;"> | </span>
                            <span>
                                <a href=http://arxiv.org/@publication.PreprintLink target="new">arXiv Preprint</a>
                            </span>



                        }
                        if (publication.BibtexFile != null)
                        {
                            <span style="color: #808080;"> | </span>
                            <span>
                                @Html.ActionLink("Bibtex", "GetBibtex", "Home", new {id = publication.PublicationID}, htmlAttributes: new { @target = "new" })
                            </span>



                        }


                    }

                </li>
                    
                }

            </ul>
        </div>


    </div>


    <!--Pagination-->
    <br />
    <hr />
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Publications", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>